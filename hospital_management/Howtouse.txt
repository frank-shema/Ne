Below is a detailed guide on how to use the **Multi-Hospital Management System** based on the current implementation (`HospitalManagement.h`, `HospitalManagement.cpp`, and `main.cpp`). This guide covers the main menu, hospital management menu, and key operations, tailored to the current date and time (09:04 PM CAT on Thursday, May 22, 2025). I’ll explain each step with examples to help you navigate and utilize the system effectively.

---

### Overview of the System
The system is a menu-driven C++ application designed to manage patient appointments across multiple hospitals. It uses linked lists to handle patient, doctor, and appointment records within each hospital, a graph data structure to represent the hospital network with distances, and CSV files for data persistence. The interface is divided into two main menus:
- **Main Menu**: For managing the hospital network (e.g., adding hospitals, finding shortest paths).
- **Hospital Menu**: For managing records within a specific hospital (e.g., adding patients, updating appointments).

---

### Getting Started
1. **Compile and Run**:
   - Save the files (`HospitalManagement.h`, `HospitalManagement.cpp`, `main.cpp`) in a directory (e.g., `~/Desktop/HospitalManagement`).
   - Compile with: `g++ -std=c++17 HospitalManagement.cpp main.cpp -o hospital_management`.
   - Run with: `./hospital_management`.
   - The system will start, and you’ll see the welcome message and main menu.

2. **Initial State**:
   - The system loads data from existing CSV files (e.g., `hospitals_network.csv`, `hospital_H1_patients.csv`) if they exist. If no files are present, the system starts with an empty network.

---

### Using the Main Menu
The main menu appears first and allows you to manage the hospital network. Here are the options:

```
Main Menu:
1. Add Hospital
2. Update Hospital
3. Delete Hospital
4. Connect Hospitals
5. Display Hospitals
6. Display Connections
7. Manage Hospital
8. Find Shortest Path
9. Exit
Enter choice (1-9):
```

#### 1. Add Hospital
- **Purpose**: Adds a new hospital to the network.
- **Steps**:
  - Enter `1`.
  - Input a unique hospital ID (e.g., `hosp1`) and name (e.g., `Ruhengeri Hospital`).
- **Example**:
  ```
  Enter choice (1-9): 1
  Enter hospital ID: hosp1
  Enter hospital name: Ruhengeri Hospital
  Hospital added successfully.
  ```
- **Note**: If the ID exists, you’ll get an error (`Hospital ID hosp1 already exists.`).

#### 2. Update Hospital
- **Purpose**: Changes the name of an existing hospital.
- **Steps**:
  - Enter `2`.
  - Input the hospital ID to update and the new name.
- **Example**:
  ```
  Enter choice (1-9): 2
  Enter hospital ID to update: hosp1
  Enter new hospital name: Ruhengeri Referral Hospital
  Hospital updated successfully.
  ```

#### 3. Delete Hospital
- **Purpose**: Removes a hospital and its records from the network.
- **Steps**:
  - Enter `3`.
  - Input the hospital ID to delete.
- **Example**:
  ```
  Enter choice (1-9): 3
  Enter hospital ID to delete: hosp1
  Hospital deleted successfully.
  ```
- **Note**: This also deletes associated patient, doctor, and appointment data files.

#### 4. Connect Hospitals
- **Purpose**: Adds a bidirectional connection (distance) between two hospitals.
- **Steps**:
  - Enter `4`.
  - Input the IDs of the two hospitals and the distance in kilometers.
- **Example**:
  ```
  Enter choice (1-9): 4
  Enter first hospital ID: hosp1
  Enter second hospital ID: hosp2
  Enter distance (km): 2
  Connection added successfully.
  ```
- **Note**: Distance must be positive, and the connection must not already exist.

#### 5. Display Hospitals
- **Purpose**: Lists all hospitals in the network.
- **Steps**:
  - Enter `5`.
- **Example**:
  ```
  Enter choice (1-9): 5
  All Hospitals:
  hosp1: Ruhengeri Referral Hospital
  hosp2: googos
  ```

#### 6. Display Connections
- **Purpose**: Shows all connections (distances) between hospitals.
- **Steps**:
  - Enter `6`.
- **Example**:
  ```
  Enter choice (1-9): 6
  Connections:
  hosp1 <-> hosp2: 2 km
  ```

#### 7. Manage Hospital
- **Purpose**: Accesses the hospital-specific menu to manage records.
- **Steps**:
  - Enter `7`.
  - Select a hospital ID from the displayed list.
- **Example**:
  ```
  Enter choice (1-9): 7
  All Hospitals:
  hosp1: Ruhengeri Referral Hospital
  hosp2: googos
  Enter hospital ID to manage: hosp2
  ```
  - This takes you to the hospital menu (see below).

#### 8. Find Shortest Path
- **Purpose**: Calculates the shortest path and distance between two hospitals for patient transfers.
- **Steps**:
  - Enter `8`.
  - Input the starting and destination hospital IDs.
- **Example**:
  ```
  Enter choice (1-9): 8
  Enter starting hospital ID: hosp1
  Enter destination hospital ID: hosp2
  Shortest Path from hosp1 to hosp2:
  Ruhengeri Referral Hospital -> googos (Total: 2 km)
  ```
- **Note**: If no path exists, it will notify you.

#### 9. Exit
- **Purpose**: Terminates the program.
- **Steps**:
  - Enter `9`.
- **Example**:
  ```
  Enter choice (1-9): 9
  Exiting program.
  ```

---

### Using the Hospital Menu
After selecting option `7` from the main menu and choosing a hospital (e.g., `hosp2`), you enter the hospital menu. Here are the options:

```
Managing googos:
1. Register Patient
2. Register Doctor
3. Register Appointment
4. Display Patients
5. Display Doctors
6. Display Appointments
7. Go to Another Hospital
8. Update Patient
9. Update Doctor
10. Update Appointment
11. Delete Patient
12. Delete Doctor
13. Delete Appointment
14. Exit
Enter choice (1-14):
```

#### 1. Register Patient
- **Purpose**: Adds a new patient to the hospital.
- **Steps**:
  - Enter `1`.
  - Input patient ID, name, DOB (YYYY-MM-DD), and gender.
- **Example**:
  ```
  Enter choice (1-14): 1
  Enter patient ID: 1
  Enter name: Alice Johnson
  Enter DOB (YYYY-MM-DD): 1995-06-15
  Enter gender: Female
  Patient added successfully.
  ```
- **Note**: Duplicate IDs are rejected.

#### 2. Register Doctor
- **Purpose**: Adds a new doctor to the hospital.
- **Steps**:
  - Enter `2`.
  - Input doctor ID, name, and specialization.
- **Example**:
  ```
  Enter choice (1-14): 2
  Enter doctor ID: 1
  Enter name: Dr. Smith
  Enter specialization: Cardiology
  Doctor added successfully.
  ```

#### 3. Register Appointment
- **Purpose**: Schedules a new appointment, validating patient and doctor IDs.
- **Steps**:
  - Enter `3`.
  - Input appointment ID, patient ID, doctor ID, and date.
- **Example**:
  ```
  Enter choice (1-14): 3
  Enter appointment ID: 1
  Enter patient ID: 1
  Enter doctor ID: 1
  Enter appointment date (YYYY-MM-DD): 2025-05-23
  Appointment added successfully.
  ```
- **Note**: Fails if patient or doctor ID doesn’t exist.

#### 4. Display Patients
- **Purpose**: Lists all patients in the hospital.
- **Steps**:
  - Enter `4`.
- **Example**:
  ```
  Enter choice (1-14): 4
  Patients in googos:
  ID: 1, Name: Alice Johnson, DOB: 1995-06-15, Gender: Female
  ```

#### 5. Display Doctors
- **Purpose**: Lists all doctors in the hospital.
- **Steps**:
  - Enter `5`.
- **Example**:
  ```
  Enter choice (1-14): 5
  Doctors in googos:
  ID: 1, Name: Dr. Smith, Specialization: Cardiology
  ```

#### 6. Display Appointments
- **Purpose**: Lists all appointments in the hospital.
- **Steps**:
  - Enter `6`.
- **Example**:
  ```
  Enter choice (1-14): 6
  Appointments in googos:
  ID: 1, Patient ID: 1, Doctor ID: 1, Date: 2025-05-23
  ```

#### 7. Go to Another Hospital
- **Purpose**: Switches to manage a different hospital.
- **Steps**:
  - Enter `7`.
  - Select a new hospital ID.
- **Example**:
  ```
  Enter choice (1-14): 7
  All Hospitals:
  hosp1: Ruhengeri Referral Hospital
  hosp2: googos
  Enter hospital ID to switch to: hosp1
  ```

#### 8. Update Patient
- **Purpose**: Modifies an existing patient’s details.
- **Steps**:
  - Enter `8`.
  - Input patient ID and new details.
- **Example**:
  ```
  Enter choice (1-14): 8
  Enter patient ID to update: 1
  Enter new name: Alice Smith
  Enter new DOB (YYYY-MM-DD): 1995-06-15
  Enter new gender: Female
  Patient updated successfully.
  ```

#### 9. Update Doctor
- **Purpose**: Modifies an existing doctor’s details.
- **Steps**:
  - Enter `9`.
  - Input doctor ID and new details.
- **Example**:
  ```
  Enter choice (1-14): 9
  Enter doctor ID to update: 1
  Enter new name: Dr. John Smith
  Enter new specialization: Cardiology
  Doctor updated successfully.
  ```

#### 10. Update Appointment
- **Purpose**: Modifies an existing appointment’s details.
- **Steps**:
  - Enter `10`.
  - Input appointment ID and new details.
- **Example**:
  ```
  Enter choice (1-14): 10
  Enter appointment ID to update: 1
  Enter new patient ID: 1
  Enter new doctor ID: 1
  Enter new appointment date (YYYY-MM-DD): 2025-05-24
  Appointment updated successfully.
  ```

#### 11. Delete Patient
- **Purpose**: Removes a patient from the hospital.
- **Steps**:
  - Enter `11`.
  - Input patient ID.
- **Example**:
  ```
  Enter choice (1-14): 11
  Enter patient ID to delete: 1
  Patient deleted successfully.
  ```

#### 12. Delete Doctor
- **Purpose**: Removes a doctor from the hospital.
- **Steps**:
  - Enter `12`.
  - Input doctor ID.
- **Example**:
  ```
  Enter choice (1-14): 12
  Enter doctor ID to delete: 1
  Doctor deleted successfully.
  ```

#### 13. Delete Appointment
- **Purpose**: Removes an appointment from the hospital.
- **Steps**:
  - Enter `13`.
  - Input appointment ID.
- **Example**:
  ```
  Enter choice (1-14): 13
  Enter appointment ID to delete: 1
  Appointment deleted successfully.
  ```

#### 14. Exit
- **Purpose**: Returns to the main menu.
- **Steps**:
  - Enter `14`.
- **Example**:
  ```
  Enter choice (1-14): 14
  ```

---

### Example Workflow
Let’s walk through a complete example starting from a fresh run:

1. **Add Two Hospitals**:
   ```
   Welcome to the Multi-Hospital Management System!

   Main Menu:
   1. Add Hospital
   2. Update Hospital
   3. Delete Hospital
   4. Connect Hospitals
   5. Display Hospitals
   6. Display Connections
   7. Manage Hospital
   8. Find Shortest Path
   9. Exit
   Enter choice (1-9): 1
   Enter hospital ID: hosp1
   Enter hospital name: Ruhengeri Referral Hospital
   Hospital added successfully.
   Enter choice (1-9): 1
   Enter hospital ID: hosp2
   Enter hospital name: googos
   Hospital added successfully.
   ```

2. **Connect Hospitals**:
   ```
   Enter choice (1-9): 4
   Enter first hospital ID: hosp1
   Enter second hospital ID: hosp2
   Enter distance (km): 2
   Connection added successfully.
   ```

3. **Manage hosp2 and Add a Patient**:
   ```
   Enter choice (1-9): 7
   All Hospitals:
   hosp1: Ruhengeri Referral Hospital
   hosp2: googos
   Enter hospital ID to manage: hosp2

   Managing googos:
   1. Register Patient
   2. Register Doctor
   3. Register Appointment
   4. Display Patients
   5. Display Doctors
   6. Display Appointments
   7. Go to Another Hospital
   8. Update Patient
   9. Update Doctor
   10. Update Appointment
   11. Delete Patient
   12. Delete Doctor
   13. Delete Appointment
   14. Exit
   Enter choice (1-14): 1
   Enter patient ID: 1
   Enter name: Alice Johnson
   Enter DOB (YYYY-MM-DD): 1995-06-15
   Enter gender: Female
   Patient added successfully.
   Enter choice (1-14): 4
   Patients in googos:
   ID: 1, Name: Alice Johnson, DOB: 1995-06-15, Gender: Female
   ```

4. **Add a Doctor and Appointment**:
   ```
   Enter choice (1-14): 2
   Enter doctor ID: 1
   Enter name: Dr. Smith
   Enter specialization: Cardiology
   Doctor added successfully.
   Enter choice (1-14): 3
   Enter appointment ID: 1
   Enter patient ID: 1
   Enter doctor ID: 1
   Enter appointment date (YYYY-MM-DD): 2025-05-23
   Appointment added successfully.
   ```

5. **Display All Records**:
   ```
   Enter choice (1-14): 4
   Patients in googos:
   ID: 1, Name: Alice Johnson, DOB: 1995-06-15, Gender: Female
   Enter choice (1-14): 5
   Doctors in googos:
   ID: 1, Name: Dr. Smith, Specialization: Cardiology
   Enter choice (1-14): 6
   Appointments in googos:
   ID: 1, Patient ID: 1, Doctor ID: 1, Date: 2025-05-23
   ```

6. **Find Shortest Path**:
   ```
   Enter choice (1-14): 14
   Enter choice (1-9): 8
   Enter starting hospital ID: hosp1
   Enter destination hospital ID: hosp2
   Shortest Path from hosp1 to hosp2:
   Ruhengeri Referral Hospital -> googos (Total: 2 km)
   ```

7. **Exit**:
   ```
   Enter choice (1-9): 9
   Exiting program.
   ```

---

### Tips for Effective Use
- **Input Validation**: The system handles invalid inputs (e.g., non-numeric IDs) with prompts to retry.
- **File Persistence**: Data is saved to CSV files after each operation (e.g., `hospital_hosp2_patients.csv`). Check these files to verify persistence.
- **Navigation**: Use option `7` in the hospital menu to switch hospitals without losing context.
- **Testing**: Try duplicate IDs or invalid appointments to see validation messages.
- **Current Date and Time**: As of 09:04 PM CAT on Thursday, May 22, 2025, the system reflects the latest updates, including shortest path and CRUD operations.

---

### Troubleshooting
- **No Hospitals Displayed**: Ensure you’ve added at least one hospital with option `1`.
- **Error Messages**: If you see “not found” or “already exists,” double-check IDs and ensure the hospital or record exists.
- **File Issues**: Ensure you have write permissions in the directory and that CSV files are not corrupted.

This guide should help you navigate the system effectively. Let me know if you need clarification or assistance with specific operations!